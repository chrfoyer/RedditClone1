@page "/CreatePost"
@using Domain.Models
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IPostService postService
@using UIComponents
@inject NavigationManager navMgr

<AuthorizeView>
    <Authorized>
        <div class="card">
            <h3>Create Post</h3>
            <div class="form-group field">
                <label>Title:</label>
                <input type="text" @bind="postTitle"/>
            </div>
            <div class="form-group field">
                <label>Body:</label>
                <input type="text" @bind="postBody"/>
            </div>
            <div class="button-row">
                @if (!string.IsNullOrEmpty(msg))
                {
                    <label style="color: red">@msg</label>
                }
                <button @onclick="Create" @onmousedown=@(() =>SetUsername(@context.User.Identity!.Name)) disabled="@(string.IsNullOrEmpty(postTitle))" class="acceptbtn">Create</button>
            </div>
            <Modal ShowModal="showModal">
                <p>You have successfully added a new post. You should be ashamed</p>
                <button @onclick="@Proceed">Ok</button>
            </Modal>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="card">You need to be logged in to create a post.</div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string username = "default";
    private string postTitle = "";
    private string postBody = "";

    private string msg = "";

    private bool showModal;

    private async Task Create()
    {
        msg = "";
        if (string.IsNullOrEmpty(postTitle))
        {
            msg = "Title cannot be empty!";
            return;
        }

        try
        {
            PostCreationDto dto = new PostCreationDto(username, postTitle, postBody);
            await postService.CreateAsync(dto);
            showModal = true;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private void SetUsername(string? username)
    {
        this.username = username;
    }

    private void Proceed()
    {
        showModal = false;
        navMgr.NavigateTo("/ViewPosts");
    }

}